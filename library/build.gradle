/**
 * Copyright 2024 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'kotlin-android'
    id 'org.jetbrains.dokka'
}

dokkaHtml {
    moduleName.set("android-maps-utils ")
}

android {
    lintOptions {
        sarifOutput = file("$buildDir/reports/lint-results.sarif")
    }
    defaultConfig {
        compileSdk 35
        minSdkVersion 21
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'consumer-rules.pro'
        // This enables us to tell when we're running unit tests on Travis (#573)
        buildConfigField("String", "TRAVIS", "\"" + System.getenv('TRAVIS') + "\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    resourcePrefix 'amu_'
    // This enables long timeouts required on slow environments, e.g. Travis
    adbOptions {
        timeOutInMs 10 * 60 * 1000  // 10 minutes
        installOptions "-d", "-t"
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    kotlin {
        jvmToolchain(17)
    }
    testOptions {
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    namespace 'com.google.maps.android'
}

dependencies {
    // We are adding api() for the Maps SDK for Android, so it propagates to the app-level modules.
    api(libs.play.services.maps)
    implementation(libs.kotlinx.coroutines.android)
    implementation(libs.appcompat)
    implementation(libs.core.ktx)
    lintPublish project(':lint-checks')
    testImplementation(libs.junit)
    testImplementation(libs.robolectric)
    testImplementation(libs.kxml2)
    testImplementation(libs.mockk)
    implementation(libs.kotlin.stdlib.jdk8)
    testImplementation(libs.truth)
}

tasks.register('instrumentTest') { dependsOn connectedCheck }

if (System.getenv("JITPACK")) {
    apply plugin: 'maven'
}
